version: "3.0"

services:


  # kafkacat:
  #   image: confluentinc/cp-kafkacat
  #   depends_on:
  #     - kafka1
  #   command: "bash -c 'sleep infinity'"
  #   volumes: 
  #     - $PWD/worker/data:/data
      
  worker:
    image: tlberglund/kafka-workshop-worker
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka1:9092
    depends_on:
      - kafka1
    command: "bash -c 'sleep infinity'"
    volumes: 
      - $PWD/worker/data:/data

  ksql:
    image: confluentinc/ksql-cli:4.1.0
    depends_on:
      - kafka1
      - zookeeper
    volumes:
      - $PWD/ksqlproperties:/ksqlserver.properties
    # environment:
    #   KSQL_CONFIG_DIR: "/etc/ksql"
    #   KSQL_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/ksql/log4j-rolling.properties"
    #   STREAMS_BOOTSTRAP_SERVERS: kafka1:9092
    #   STREAMS_SCHEMA_REGISTRY_HOST: schemaregistry
    #   STREAMS_SCHEMA_REGISTRY_PORT: 8081

  database:
    image: postgres
    volumes:
     - ./data/schema.sql:/docker-entrypoint-initdb.d/z99_dump.sql
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=WORKSHOP
       
       
  zookeeper:
    image: confluentinc/cp-zookeeper:4.1.0
    restart: always
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: "2181"
      ZOOKEEPER_TICK_TIME: "2000"
      ZOOKEEPER_SERVERS: "zookeeper:22888:23888"
    ports:
      - "2181:2181"
            
  connect:
    image: confluentinc/cp-kafka-connect:4.1.0
    depends_on:
      - zookeeper
      - kafka1
      - schemaregistry
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka1:9092"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schemaregistry:8081'
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schemaregistry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: '/usr/share/java'
      
      
  kafka1:
    image: confluentinc/cp-enterprise-kafka:4.1.0
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_BROKER_ID: 1
      KAFKA_BROKER_RACK: "r1"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_SCHEMA_REGISTRY_URL: "schemaregistry:8081"
      #KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_JMX_PORT: 9991
      
      
  schemaregistry:
    image: confluentinc/cp-schema-registry:4.1.0
    restart: always
    depends_on:
      - zookeeper
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
    ports:
      - 8081:8081
      
      
  restproxy:
    image: confluentinc/cp-kafka-rest:4.1.0
    restart: always
    depends_on:
      - kafka1
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: "http://schemaregistry:8081"
      KAFKA_REST_HOST_NAME: restproxy
      KAFKA_REST_DEBUG: "true"
    ports:
      - 8082:8082
